# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Fhenix < Formula
  desc "Fhenix is a FHIR code-generation tool for producing language bindings from structure definitions
"
  homepage "https://friendly-fhir.org/fhenix"
  version "0.1.0"

  on_macos do
    on_intel do
      url "https://github.com/friendly-fhir/fhenix/releases/download/v0.1.0/fhenix-0.1.0-darwin-x86_64.tar.gz"
      sha256 "ec4ab597722f69fedc14a4b3084fd6e1b645c1e6c65c7b95e19a3cb40f74f192"

      def install
        bin.install "fhenix"
        output = Utils.popen_read("#{bin}/fhenix completion bash")
        (bash_completion/"fhenix").write output
        output = Utils.popen_read("#{bin}/fhenix completion zsh")
        (zsh_completion/"_fhenix").write output
        output = Utils.popen_read("#{bin}/fhenixlint completion fish")
        (fish_completion/"fhenix.fish").write output
        prefix.install_metafiles
      end
    end
    on_arm do
      url "https://github.com/friendly-fhir/fhenix/releases/download/v0.1.0/fhenix-0.1.0-darwin-arm64.tar.gz"
      sha256 "d10f938b12dfed5bec97bc67861b54e425c0d826465d950ed5714df35795297b"

      def install
        bin.install "fhenix"
        output = Utils.popen_read("#{bin}/fhenix completion bash")
        (bash_completion/"fhenix").write output
        output = Utils.popen_read("#{bin}/fhenix completion zsh")
        (zsh_completion/"_fhenix").write output
        output = Utils.popen_read("#{bin}/fhenixlint completion fish")
        (fish_completion/"fhenix.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    on_intel do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/friendly-fhir/fhenix/releases/download/v0.1.0/fhenix-0.1.0-linux-x86_64.tar.gz"
        sha256 "66c363f341bf3677ae06886f7dab89c09ef661adf23d4ff9414d3bb493a78432"

        def install
          bin.install "fhenix"
          output = Utils.popen_read("#{bin}/fhenix completion bash")
          (bash_completion/"fhenix").write output
          output = Utils.popen_read("#{bin}/fhenix completion zsh")
          (zsh_completion/"_fhenix").write output
          output = Utils.popen_read("#{bin}/fhenixlint completion fish")
          (fish_completion/"fhenix.fish").write output
          prefix.install_metafiles
        end
      end
    end
    on_arm do
      if Hardware::CPU.is_64_bit?
        url "https://github.com/friendly-fhir/fhenix/releases/download/v0.1.0/fhenix-0.1.0-linux-arm64.tar.gz"
        sha256 "657197290223568360dd11ee2201cf650b0780714c5f5faf55001ab2ad6f90a5"

        def install
          bin.install "fhenix"
          output = Utils.popen_read("#{bin}/fhenix completion bash")
          (bash_completion/"fhenix").write output
          output = Utils.popen_read("#{bin}/fhenix completion zsh")
          (zsh_completion/"_fhenix").write output
          output = Utils.popen_read("#{bin}/fhenixlint completion fish")
          (fish_completion/"fhenix.fish").write output
          prefix.install_metafiles
        end
      end
    end
  end

  test do
    system "#{bin}/fhenix --version"
  end
end
